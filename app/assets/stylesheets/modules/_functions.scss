// Rem
$rem-base: 16px !default;

// STRIP UNIT
// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// CONVERT TO REM
@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

// transition
@mixin transition() {
  transition: all 0.2s ease;
}


// Bootstrap mixins
@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}

@mixin bs_transition($transition) {
  -webkit-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}


// border radius
@mixin border_radius($roundness: rem-calc(45)) {
  -webkit-border-radius: $roundness;
  border-radius: $roundness;
}

@mixin border_radius_left() {
  /* top-left | top-right | bottom-right | bottom-left */
  -webkit-border-radius: rem-calc(45) 0 0 rem-calc(45);
  border-radius: rem-calc(45) 0 0 rem-calc(45);
}

@mixin border_radius_right() {
  /* top-left | top-right | bottom-right | bottom-left */
  -webkit-border-radius: 0 rem-calc(45) rem-calc(45) 0;
  border-radius: 0 rem-calc(45) rem-calc(45) 0;
}

